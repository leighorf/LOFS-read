#!/usr/bin/env python
# coding: utf-8
try:
    import numpy as np
except:
    print("Error importing numpy. Is it installed?")

try:
    import sharppy.sharptab.thermo as thermo
    import sharppy.sharptab.utils as utils
    import sharppy.sharptab.profile as prof
    import sharppy.sharptab.interp as interp
    from sharppy.io import spc_decoder as spcdc
except:
    print("Error importing SHARPpy. Is it installed?")

import datetime
import argparse

def merge_sharp_txt(tfilename, wfilename):

    ## create the decoder object
    tdc = spcdc.SPCDecoder(tfilename)
    wdc = spcdc.SPCDecoder(wfilename)
    ## get the profiles from the text file
    tprofiles = tdc.getProfiles().getCurrentProfs()
    wprofiles = wdc.getProfiles().getCurrentProfs()
    ## loop over the profiles in the file. There should
    ## at least be one. 
    for tprofile, wprofile in zip(tprofiles.values(), wprofiles.values()):
        tP = tprofile.pres
        tH = tprofile.hght
        tT = tprofile.tmpc
        tTd = tprofile.dwpc

        wH = wprofile.hght
        wU = wprofile.u
        wV = wprofile.v

        new_p = interp.pres(wprofile, tH)
        new_u, new_v = interp.components(wprofile, new_p)

        merged_prof = prof.create_profile(pres=new_p, hght=tH, tmpc=tT, dwpc=tTd, u=new_u, v=new_v, location=tprofile.location)
        merged_prof.date = tprofile.date
        return merged_prof

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--thermo', action='store', dest='tfile', help='Thermodynamic input sounding file path', default=None, required=True)
    parser.add_argument('--winds', action='store', dest='wfile', help='Kinematic input sounding file path', default=None, required=True)
    args = parser.parse_args()

    prof = merge_sharp_txt(args.tfile, args.wfile)
    prof.toFile("merged-snd.txt")

if __name__ == '__main__':
    main()

